ARM GAS  /tmp/ccDLp4nd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_Error_Handler:
  27              	.LFB128:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2021 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccDLp4nd.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** #include "spi.h"
  43:Src/main.c    **** #include "usart.h"
  44:Src/main.c    **** #include "gpio.h"
  45:Src/main.c    **** #include "rf69.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** uint8_t nativeMsg[66];                                                    // 'Native' format messag
  56:Src/main.c    **** char str[12];
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   *
  74:Src/main.c    ****   * @retval None
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccDLp4nd.s 			page 3


  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_SPI4_Init();
 101:Src/main.c    ****   MX_USART1_UART_Init();
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 103:Src/main.c    ****   debug_printf("UART TEST!\r\n");
 104:Src/main.c    ****   
 105:Src/main.c    ****   RF69_init(5,210,434);
 106:Src/main.c    ****   
 107:Src/main.c    ****   debug_printf("RFM INIT!\r\n");
 108:Src/main.c    ****   /* USER CODE END 2 */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Infinite loop */
 111:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 112:Src/main.c    ****   while (1)
 113:Src/main.c    ****   {
 114:Src/main.c    ****     int8_t n = RF69_receive(&nativeMsg, sizeof(nativeMsg));                   // Poll the RFM buffe
 115:Src/main.c    ****     if (n > 1) 
 116:Src/main.c    ****     {
 117:Src/main.c    ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 1);
 118:Src/main.c    ****       
 119:Src/main.c    ****       // OK and Node ID  
 120:Src/main.c    ****       sprintf(str,"OK %d",nativeMsg[1] & 0x3F);
 121:Src/main.c    ****       debug_printf(str);
 122:Src/main.c    ****       
 123:Src/main.c    ****       // Data
 124:Src/main.c    ****       for (uint8_t i = 2; i < n; ++i) {
 125:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 126:Src/main.c    ****         debug_printf(str);
 127:Src/main.c    ****       }
 128:Src/main.c    ****       
 129:Src/main.c    ****       // RSSI value after packet data
 130:Src/main.c    ****       sprintf(str," (%d)\r\n",-(rssi>>1));
 131:Src/main.c    ****       debug_printf(str);
 132:Src/main.c    ****       
 133:Src/main.c    ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 0);
 134:Src/main.c    ****     }
 135:Src/main.c    ****   /* USER CODE END WHILE */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* USER CODE BEGIN 3 */
 138:Src/main.c    **** 
 139:Src/main.c    ****   }
 140:Src/main.c    ****   /* USER CODE END 3 */
 141:Src/main.c    **** 
 142:Src/main.c    **** }
 143:Src/main.c    **** 
 144:Src/main.c    **** /**
ARM GAS  /tmp/ccDLp4nd.s 			page 4


 145:Src/main.c    ****   * @brief System Clock Configuration
 146:Src/main.c    ****   * @retval None
 147:Src/main.c    ****   */
 148:Src/main.c    **** void SystemClock_Config(void)
 149:Src/main.c    **** {
 150:Src/main.c    **** 
 151:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 152:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 153:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 154:Src/main.c    **** 
 155:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 156:Src/main.c    ****     */
 157:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 158:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 159:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 164:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 165:Src/main.c    ****   {
 166:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 167:Src/main.c    ****   }
 168:Src/main.c    **** 
 169:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 170:Src/main.c    ****     */
 171:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 176:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 177:Src/main.c    **** 
 178:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 179:Src/main.c    ****   {
 180:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 181:Src/main.c    ****   }
 182:Src/main.c    **** 
 183:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 184:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 185:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 186:Src/main.c    ****   {
 187:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 188:Src/main.c    ****   }
 189:Src/main.c    **** 
 190:Src/main.c    ****     /**Configure the Systick interrupt time 
 191:Src/main.c    ****     */
 192:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 193:Src/main.c    **** 
 194:Src/main.c    ****     /**Configure the Systick 
 195:Src/main.c    ****     */
 196:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 199:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 200:Src/main.c    **** }
 201:Src/main.c    **** 
ARM GAS  /tmp/ccDLp4nd.s 			page 5


 202:Src/main.c    **** /* USER CODE BEGIN 4 */
 203:Src/main.c    **** 
 204:Src/main.c    **** /* USER CODE END 4 */
 205:Src/main.c    **** 
 206:Src/main.c    **** /**
 207:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 208:Src/main.c    ****   * @param  file: The file name as string.
 209:Src/main.c    ****   * @param  line: The line in file as a number.
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** void _Error_Handler(char *file, int line)
 213:Src/main.c    **** {
  29              		.loc 1 213 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36              	.L2:
 214:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 215:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 216:Src/main.c    ****   while(1)
  37              		.loc 1 216 3 discriminator 1 view .LVU1
 217:Src/main.c    ****   {
 218:Src/main.c    ****   }
  38              		.loc 1 218 3 discriminator 1 view .LVU2
 216:Src/main.c    ****   {
  39              		.loc 1 216 8 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE128:
  44              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  45              		.align	2
  46              	.LC0:
  47 0000 5372632F 		.ascii	"Src/main.c\000"
  47      6D61696E 
  47      2E6300
  48              		.section	.text.SystemClock_Config,"ax",%progbits
  49              		.align	1
  50              		.global	SystemClock_Config
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	SystemClock_Config:
  57              	.LFB127:
 149:Src/main.c    **** 
  58              		.loc 1 149 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 152
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 00B5     		push	{lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 14, -4
  66 0002 A7B0     		sub	sp, sp, #156
ARM GAS  /tmp/ccDLp4nd.s 			page 6


  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 160
 151:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  69              		.loc 1 151 3 view .LVU5
 152:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
  70              		.loc 1 152 3 view .LVU6
 153:Src/main.c    **** 
  71              		.loc 1 153 3 view .LVU7
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  72              		.loc 1 157 3 view .LVU8
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  73              		.loc 1 157 36 is_stmt 0 view .LVU9
  74 0004 0223     		movs	r3, #2
  75 0006 1C93     		str	r3, [sp, #112]
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  76              		.loc 1 158 3 is_stmt 1 view .LVU10
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  77              		.loc 1 158 30 is_stmt 0 view .LVU11
  78 0008 0122     		movs	r2, #1
  79 000a 1F92     		str	r2, [sp, #124]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  80              		.loc 1 159 3 is_stmt 1 view .LVU12
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  81              		.loc 1 159 41 is_stmt 0 view .LVU13
  82 000c 1022     		movs	r2, #16
  83 000e 2092     		str	r2, [sp, #128]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  84              		.loc 1 160 3 is_stmt 1 view .LVU14
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  85              		.loc 1 160 34 is_stmt 0 view .LVU15
  86 0010 2293     		str	r3, [sp, #136]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  87              		.loc 1 161 3 is_stmt 1 view .LVU16
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  88              		.loc 1 161 35 is_stmt 0 view .LVU17
  89 0012 4FF40043 		mov	r3, #32768
  90 0016 2393     		str	r3, [sp, #140]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  91              		.loc 1 162 3 is_stmt 1 view .LVU18
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  92              		.loc 1 162 32 is_stmt 0 view .LVU19
  93 0018 4FF4E013 		mov	r3, #1835008
  94 001c 2493     		str	r3, [sp, #144]
 163:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  95              		.loc 1 163 3 is_stmt 1 view .LVU20
 163:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  96              		.loc 1 163 32 is_stmt 0 view .LVU21
  97 001e 0023     		movs	r3, #0
  98 0020 2593     		str	r3, [sp, #148]
 164:Src/main.c    ****   {
  99              		.loc 1 164 3 is_stmt 1 view .LVU22
 164:Src/main.c    ****   {
 100              		.loc 1 164 7 is_stmt 0 view .LVU23
 101 0022 1CA8     		add	r0, sp, #112
 102 0024 FFF7FEFF 		bl	HAL_RCC_OscConfig
 103              	.LVL1:
 164:Src/main.c    ****   {
ARM GAS  /tmp/ccDLp4nd.s 			page 7


 104              		.loc 1 164 6 view .LVU24
 105 0028 48BB     		cbnz	r0, .L8
 171:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 106              		.loc 1 171 3 is_stmt 1 view .LVU25
 171:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 107              		.loc 1 171 31 is_stmt 0 view .LVU26
 108 002a 0F23     		movs	r3, #15
 109 002c 1793     		str	r3, [sp, #92]
 173:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 110              		.loc 1 173 3 is_stmt 1 view .LVU27
 173:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 111              		.loc 1 173 34 is_stmt 0 view .LVU28
 112 002e 0221     		movs	r1, #2
 113 0030 1891     		str	r1, [sp, #96]
 174:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 114              		.loc 1 174 3 is_stmt 1 view .LVU29
 174:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 115              		.loc 1 174 35 is_stmt 0 view .LVU30
 116 0032 0023     		movs	r3, #0
 117 0034 1993     		str	r3, [sp, #100]
 175:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 118              		.loc 1 175 3 is_stmt 1 view .LVU31
 175:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 119              		.loc 1 175 36 is_stmt 0 view .LVU32
 120 0036 4FF48062 		mov	r2, #1024
 121 003a 1A92     		str	r2, [sp, #104]
 176:Src/main.c    **** 
 122              		.loc 1 176 3 is_stmt 1 view .LVU33
 176:Src/main.c    **** 
 123              		.loc 1 176 36 is_stmt 0 view .LVU34
 124 003c 1B93     		str	r3, [sp, #108]
 178:Src/main.c    ****   {
 125              		.loc 1 178 3 is_stmt 1 view .LVU35
 178:Src/main.c    ****   {
 126              		.loc 1 178 7 is_stmt 0 view .LVU36
 127 003e 17A8     		add	r0, sp, #92
 128 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 129              	.LVL2:
 178:Src/main.c    ****   {
 130              		.loc 1 178 6 view .LVU37
 131 0044 F8B9     		cbnz	r0, .L9
 183:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 132              		.loc 1 183 3 is_stmt 1 view .LVU38
 183:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 133              		.loc 1 183 38 is_stmt 0 view .LVU39
 134 0046 0123     		movs	r3, #1
 135 0048 0193     		str	r3, [sp, #4]
 184:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 136              		.loc 1 184 3 is_stmt 1 view .LVU40
 184:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 137              		.loc 1 184 38 is_stmt 0 view .LVU41
 138 004a 0023     		movs	r3, #0
 139 004c 0393     		str	r3, [sp, #12]
 185:Src/main.c    ****   {
 140              		.loc 1 185 3 is_stmt 1 view .LVU42
 185:Src/main.c    ****   {
 141              		.loc 1 185 7 is_stmt 0 view .LVU43
ARM GAS  /tmp/ccDLp4nd.s 			page 8


 142 004e 01A8     		add	r0, sp, #4
 143 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 144              	.LVL3:
 185:Src/main.c    ****   {
 145              		.loc 1 185 6 view .LVU44
 146 0054 D8B9     		cbnz	r0, .L10
 192:Src/main.c    **** 
 147              		.loc 1 192 3 is_stmt 1 view .LVU45
 192:Src/main.c    **** 
 148              		.loc 1 192 22 is_stmt 0 view .LVU46
 149 0056 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 150              	.LVL4:
 192:Src/main.c    **** 
 151              		.loc 1 192 3 view .LVU47
 152 005a 0F4B     		ldr	r3, .L11
 153 005c A3FB0030 		umull	r3, r0, r3, r0
 154 0060 8009     		lsrs	r0, r0, #6
 155 0062 FFF7FEFF 		bl	HAL_SYSTICK_Config
 156              	.LVL5:
 196:Src/main.c    **** 
 157              		.loc 1 196 3 is_stmt 1 view .LVU48
 158 0066 0420     		movs	r0, #4
 159 0068 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 160              	.LVL6:
 199:Src/main.c    **** }
 161              		.loc 1 199 3 view .LVU49
 162 006c 0022     		movs	r2, #0
 163 006e 1146     		mov	r1, r2
 164 0070 4FF0FF30 		mov	r0, #-1
 165 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 166              	.LVL7:
 200:Src/main.c    **** 
 167              		.loc 1 200 1 is_stmt 0 view .LVU50
 168 0078 27B0     		add	sp, sp, #156
 169              	.LCFI2:
 170              		.cfi_remember_state
 171              		.cfi_def_cfa_offset 4
 172              		@ sp needed
 173 007a 5DF804FB 		ldr	pc, [sp], #4
 174              	.L8:
 175              	.LCFI3:
 176              		.cfi_restore_state
 166:Src/main.c    ****   }
 177              		.loc 1 166 5 is_stmt 1 view .LVU51
 178 007e A621     		movs	r1, #166
 179 0080 0648     		ldr	r0, .L11+4
 180 0082 FFF7FEFF 		bl	_Error_Handler
 181              	.LVL8:
 182              	.L9:
 180:Src/main.c    ****   }
 183              		.loc 1 180 5 view .LVU52
 184 0086 B421     		movs	r1, #180
 185 0088 0448     		ldr	r0, .L11+4
 186 008a FFF7FEFF 		bl	_Error_Handler
 187              	.LVL9:
 188              	.L10:
 187:Src/main.c    ****   }
ARM GAS  /tmp/ccDLp4nd.s 			page 9


 189              		.loc 1 187 5 view .LVU53
 190 008e BB21     		movs	r1, #187
 191 0090 0248     		ldr	r0, .L11+4
 192 0092 FFF7FEFF 		bl	_Error_Handler
 193              	.LVL10:
 194              	.L12:
 195 0096 00BF     		.align	2
 196              	.L11:
 197 0098 D34D6210 		.word	274877907
 198 009c 00000000 		.word	.LC0
 199              		.cfi_endproc
 200              	.LFE127:
 202              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 203              		.align	2
 204              	.LC1:
 205 0000 55415254 		.ascii	"UART TEST!\015\012\000"
 205      20544553 
 205      54210D0A 
 205      00
 206 000d 000000   		.align	2
 207              	.LC2:
 208 0010 52464D20 		.ascii	"RFM INIT!\015\012\000"
 208      494E4954 
 208      210D0A00 
 209              		.align	2
 210              	.LC3:
 211 001c 4F4B2025 		.ascii	"OK %d\000"
 211      6400
 212 0022 0000     		.align	2
 213              	.LC4:
 214 0024 20256400 		.ascii	" %d\000"
 215              		.align	2
 216              	.LC5:
 217 0028 20282564 		.ascii	" (%d)\015\012\000"
 217      290D0A00 
 218              		.section	.text.main,"ax",%progbits
 219              		.align	1
 220              		.global	main
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	main:
 227              	.LFB126:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 228              		.loc 1 77 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 70B5     		push	{r4, r5, r6, lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 16
 235              		.cfi_offset 4, -16
 236              		.cfi_offset 5, -12
 237              		.cfi_offset 6, -8
 238              		.cfi_offset 14, -4
  85:Src/main.c    **** 
ARM GAS  /tmp/ccDLp4nd.s 			page 10


 239              		.loc 1 85 3 view .LVU55
 240 0002 FFF7FEFF 		bl	HAL_Init
 241              	.LVL11:
  92:Src/main.c    **** 
 242              		.loc 1 92 3 view .LVU56
 243 0006 FFF7FEFF 		bl	SystemClock_Config
 244              	.LVL12:
  99:Src/main.c    ****   MX_SPI4_Init();
 245              		.loc 1 99 3 view .LVU57
 246 000a FFF7FEFF 		bl	MX_GPIO_Init
 247              	.LVL13:
 100:Src/main.c    ****   MX_USART1_UART_Init();
 248              		.loc 1 100 3 view .LVU58
 249 000e FFF7FEFF 		bl	MX_SPI4_Init
 250              	.LVL14:
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 251              		.loc 1 101 3 view .LVU59
 252 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 253              	.LVL15:
 103:Src/main.c    ****   
 254              		.loc 1 103 3 view .LVU60
 255 0016 2448     		ldr	r0, .L20
 256 0018 FFF7FEFF 		bl	debug_printf
 257              	.LVL16:
 105:Src/main.c    ****   
 258              		.loc 1 105 3 view .LVU61
 259 001c 4FF4D972 		mov	r2, #434
 260 0020 D221     		movs	r1, #210
 261 0022 0520     		movs	r0, #5
 262 0024 FFF7FEFF 		bl	RF69_init
 263              	.LVL17:
 107:Src/main.c    ****   /* USER CODE END 2 */
 264              		.loc 1 107 3 view .LVU62
 265 0028 2048     		ldr	r0, .L20+4
 266 002a FFF7FEFF 		bl	debug_printf
 267              	.LVL18:
 268 002e 26E0     		b	.L14
 269              	.LVL19:
 270              	.L19:
 271              	.LBB2:
 117:Src/main.c    ****       
 272              		.loc 1 117 7 view .LVU63
 273 0030 0122     		movs	r2, #1
 274 0032 4FF48071 		mov	r1, #256
 275 0036 1E48     		ldr	r0, .L20+8
 276              	.LVL20:
 117:Src/main.c    ****       
 277              		.loc 1 117 7 is_stmt 0 view .LVU64
 278 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 279              	.LVL21:
 120:Src/main.c    ****       debug_printf(str);
 280              		.loc 1 120 7 is_stmt 1 view .LVU65
 120:Src/main.c    ****       debug_printf(str);
 281              		.loc 1 120 36 is_stmt 0 view .LVU66
 282 003c 1D4B     		ldr	r3, .L20+12
 283 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 120:Src/main.c    ****       debug_printf(str);
ARM GAS  /tmp/ccDLp4nd.s 			page 11


 284              		.loc 1 120 7 view .LVU67
 285 0040 1D4D     		ldr	r5, .L20+16
 286 0042 02F03F02 		and	r2, r2, #63
 287 0046 1D49     		ldr	r1, .L20+20
 288 0048 2846     		mov	r0, r5
 289 004a FFF7FEFF 		bl	sprintf
 290              	.LVL22:
 121:Src/main.c    ****       
 291              		.loc 1 121 7 is_stmt 1 view .LVU68
 292 004e 2846     		mov	r0, r5
 293 0050 FFF7FEFF 		bl	debug_printf
 294              	.LVL23:
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 295              		.loc 1 124 7 view .LVU69
 296              	.LBB3:
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 297              		.loc 1 124 12 view .LVU70
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 298              		.loc 1 124 20 is_stmt 0 view .LVU71
 299 0054 0225     		movs	r5, #2
 300              	.LVL24:
 301              	.L15:
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 302              		.loc 1 124 27 is_stmt 1 discriminator 1 view .LVU72
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 303              		.loc 1 124 7 is_stmt 0 discriminator 1 view .LVU73
 304 0056 A542     		cmp	r5, r4
 305 0058 19DB     		blt	.L16
 306              	.LBE3:
 130:Src/main.c    ****       debug_printf(str);
 307              		.loc 1 130 7 is_stmt 1 view .LVU74
 130:Src/main.c    ****       debug_printf(str);
 308              		.loc 1 130 37 is_stmt 0 view .LVU75
 309 005a 194B     		ldr	r3, .L20+24
 310 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 311 005e 5208     		lsrs	r2, r2, #1
 130:Src/main.c    ****       debug_printf(str);
 312              		.loc 1 130 7 view .LVU76
 313 0060 154C     		ldr	r4, .L20+16
 314 0062 5242     		rsbs	r2, r2, #0
 315 0064 1749     		ldr	r1, .L20+28
 316 0066 2046     		mov	r0, r4
 317 0068 FFF7FEFF 		bl	sprintf
 318              	.LVL25:
 131:Src/main.c    ****       
 319              		.loc 1 131 7 is_stmt 1 view .LVU77
 320 006c 2046     		mov	r0, r4
 321 006e FFF7FEFF 		bl	debug_printf
 322              	.LVL26:
 133:Src/main.c    ****     }
 323              		.loc 1 133 7 view .LVU78
 324 0072 0022     		movs	r2, #0
 325 0074 4FF48071 		mov	r1, #256
 326 0078 0D48     		ldr	r0, .L20+8
 327 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 328              	.LVL27:
 329              	.L14:
ARM GAS  /tmp/ccDLp4nd.s 			page 12


 133:Src/main.c    ****     }
 330              		.loc 1 133 7 is_stmt 0 view .LVU79
 331              	.LBE2:
 112:Src/main.c    ****   {
 332              		.loc 1 112 3 is_stmt 1 view .LVU80
 333              	.LBB5:
 114:Src/main.c    ****     if (n > 1) 
 334              		.loc 1 114 5 view .LVU81
 114:Src/main.c    ****     if (n > 1) 
 335              		.loc 1 114 16 is_stmt 0 view .LVU82
 336 007e 4221     		movs	r1, #66
 337 0080 0C48     		ldr	r0, .L20+12
 338 0082 FFF7FEFF 		bl	RF69_receive
 339              	.LVL28:
 340 0086 0446     		mov	r4, r0
 341              	.LVL29:
 115:Src/main.c    ****     {
 342              		.loc 1 115 5 is_stmt 1 view .LVU83
 115:Src/main.c    ****     {
 343              		.loc 1 115 8 is_stmt 0 view .LVU84
 344 0088 0128     		cmp	r0, #1
 345 008a F8DD     		ble	.L14
 346 008c D0E7     		b	.L19
 347              	.LVL30:
 348              	.L16:
 349              	.LBB4:
 125:Src/main.c    ****         debug_printf(str);
 350              		.loc 1 125 9 is_stmt 1 discriminator 3 view .LVU85
 351 008e 0A4E     		ldr	r6, .L20+16
 352 0090 084B     		ldr	r3, .L20+12
 353 0092 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 354 0094 0C49     		ldr	r1, .L20+32
 355 0096 3046     		mov	r0, r6
 356 0098 FFF7FEFF 		bl	sprintf
 357              	.LVL31:
 126:Src/main.c    ****       }
 358              		.loc 1 126 9 discriminator 3 view .LVU86
 359 009c 3046     		mov	r0, r6
 360 009e FFF7FEFF 		bl	debug_printf
 361              	.LVL32:
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 362              		.loc 1 124 34 discriminator 3 view .LVU87
 363 00a2 0135     		adds	r5, r5, #1
 364              	.LVL33:
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 365              		.loc 1 124 34 is_stmt 0 discriminator 3 view .LVU88
 366 00a4 EDB2     		uxtb	r5, r5
 367              	.LVL34:
 124:Src/main.c    ****         sprintf(str," %d",nativeMsg[i]);
 368              		.loc 1 124 34 discriminator 3 view .LVU89
 369 00a6 D6E7     		b	.L15
 370              	.L21:
 371              		.align	2
 372              	.L20:
 373 00a8 00000000 		.word	.LC1
 374 00ac 10000000 		.word	.LC2
 375 00b0 00080048 		.word	1207961600
ARM GAS  /tmp/ccDLp4nd.s 			page 13


 376 00b4 00000000 		.word	nativeMsg
 377 00b8 00000000 		.word	str
 378 00bc 1C000000 		.word	.LC3
 379 00c0 00000000 		.word	rssi
 380 00c4 28000000 		.word	.LC5
 381 00c8 24000000 		.word	.LC4
 382              	.LBE4:
 383              	.LBE5:
 384              		.cfi_endproc
 385              	.LFE126:
 387              		.comm	str,12,4
 388              		.comm	nativeMsg,66,4
 389              		.comm	rssi,1,1
 390              		.comm	afc,1,1
 391              		.comm	lna,1,1
 392              		.comm	parity,1,1
 393              		.comm	myId,1,1
 394              		.comm	mode,1,1
 395              		.text
 396              	.Letext0:
 397              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 398              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 399              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 400              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 401              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 402              		.file 7 "/usr/include/newlib/sys/_types.h"
 403              		.file 8 "/usr/include/newlib/sys/reent.h"
 404              		.file 9 "/usr/include/newlib/sys/lock.h"
 405              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 406              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 407              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 408              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 409              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 410              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 411              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 412              		.file 17 "Inc/spi.h"
 413              		.file 18 "Inc/usart.h"
 414              		.file 19 "Inc/rf69.h"
 415              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 416              		.file 21 "/usr/include/newlib/stdio.h"
 417              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 418              		.file 23 "Inc/gpio.h"
ARM GAS  /tmp/ccDLp4nd.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccDLp4nd.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccDLp4nd.s:26     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccDLp4nd.s:45     .rodata.SystemClock_Config.str1.4:0000000000000000 $d
     /tmp/ccDLp4nd.s:49     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccDLp4nd.s:56     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccDLp4nd.s:197    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccDLp4nd.s:203    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccDLp4nd.s:219    .text.main:0000000000000000 $t
     /tmp/ccDLp4nd.s:226    .text.main:0000000000000000 main
     /tmp/ccDLp4nd.s:373    .text.main:00000000000000a8 $d
                            *COM*:0000000000000042 nativeMsg
                            *COM*:000000000000000c str
                            *COM*:0000000000000001 rssi
                            *COM*:0000000000000001 afc
                            *COM*:0000000000000001 lna
                            *COM*:0000000000000001 parity
                            *COM*:0000000000000001 myId
                            *COM*:0000000000000001 mode

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_SPI4_Init
MX_USART1_UART_Init
debug_printf
RF69_init
HAL_GPIO_WritePin
sprintf
RF69_receive
