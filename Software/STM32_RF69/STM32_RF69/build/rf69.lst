ARM GAS  /tmp/ccRBXKVw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rf69.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RFM69_SetCSPin,"ax",%progbits
  18              		.align	1
  19              		.global	RFM69_SetCSPin
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	RFM69_SetCSPin:
  27              	.LVL0:
  28              	.LFB126:
  29              		.file 1 "Src/rf69.c"
   1:Src/rf69.c    **** #include <rf69.h>
   2:Src/rf69.c    **** #include <spi.h>
   3:Src/rf69.c    **** #include "usart.h"
   4:Src/rf69.c    **** // --------------------------------------------------------------------------
   5:Src/rf69.c    **** 
   6:Src/rf69.c    **** // void spi_master (uint8_t val) {}
   7:Src/rf69.c    **** 
   8:Src/rf69.c    **** void RFM69_SetCSPin(bool value) {
  30              		.loc 1 8 33 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 8 33 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40 0002 0246     		mov	r2, r0
   9:Src/rf69.c    ****   HAL_GPIO_WritePin(GPIOE, SPI4_CS_RFM_Pin, value); //GPIOA, GPIO_PIN_5 is LED on Nucleao, for test
  41              		.loc 1 9 3 is_stmt 1 view .LVU2
  42 0004 0821     		movs	r1, #8
  43 0006 0248     		ldr	r0, .L3
  44              	.LVL1:
  45              		.loc 1 9 3 is_stmt 0 view .LVU3
  46 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  47              	.LVL2:
  10:Src/rf69.c    **** }
  48              		.loc 1 10 1 view .LVU4
ARM GAS  /tmp/ccRBXKVw.s 			page 2


  49 000c 08BD     		pop	{r3, pc}
  50              	.L4:
  51 000e 00BF     		.align	2
  52              	.L3:
  53 0010 00100048 		.word	1207963648
  54              		.cfi_endproc
  55              	.LFE126:
  57              		.section	.text.RF69_select,"ax",%progbits
  58              		.align	1
  59              		.global	RF69_select
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	RF69_select:
  66              	.LFB127:
  11:Src/rf69.c    **** // select the RFM69 transceiver (save SPI settings, set CS low)
  12:Src/rf69.c    **** void RF69_select() {
  67              		.loc 1 12 20 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 08B5     		push	{r3, lr}
  72              	.LCFI1:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
  13:Src/rf69.c    ****   RFM69_SetCSPin(0);
  76              		.loc 1 13 3 view .LVU6
  77 0002 0020     		movs	r0, #0
  78 0004 FFF7FEFF 		bl	RFM69_SetCSPin
  79              	.LVL3:
  14:Src/rf69.c    **** }
  80              		.loc 1 14 1 is_stmt 0 view .LVU7
  81 0008 08BD     		pop	{r3, pc}
  82              		.cfi_endproc
  83              	.LFE127:
  85              		.section	.text.RF69_unselect,"ax",%progbits
  86              		.align	1
  87              		.global	RF69_unselect
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	RF69_unselect:
  94              	.LFB128:
  15:Src/rf69.c    **** 
  16:Src/rf69.c    **** // unselect the RFM69 transceiver (set CS high, restore SPI settings)
  17:Src/rf69.c    **** void RF69_unselect() {
  95              		.loc 1 17 22 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 08B5     		push	{r3, lr}
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 3, -8
ARM GAS  /tmp/ccRBXKVw.s 			page 3


 103              		.cfi_offset 14, -4
  18:Src/rf69.c    ****   RFM69_SetCSPin(1);
 104              		.loc 1 18 3 view .LVU9
 105 0002 0120     		movs	r0, #1
 106 0004 FFF7FEFF 		bl	RFM69_SetCSPin
 107              	.LVL4:
  19:Src/rf69.c    **** }
 108              		.loc 1 19 1 is_stmt 0 view .LVU10
 109 0008 08BD     		pop	{r3, pc}
 110              		.cfi_endproc
 111              	.LFE128:
 113              		.section	.text.spi_rwReg,"ax",%progbits
 114              		.align	1
 115              		.global	spi_rwReg
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	spi_rwReg:
 122              	.LVL5:
 123              	.LFB129:
  20:Src/rf69.c    **** 
  21:Src/rf69.c    **** uint8_t spi_rwReg (uint8_t addr, uint8_t val) {    
 124              		.loc 1 21 47 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 21 47 is_stmt 0 view .LVU12
 129 0000 38B5     		push	{r3, r4, r5, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 3, -16
 133              		.cfi_offset 4, -12
 134              		.cfi_offset 5, -8
 135              		.cfi_offset 14, -4
 136 0002 0546     		mov	r5, r0
 137 0004 0C46     		mov	r4, r1
  22:Src/rf69.c    ****   RF69_select();
 138              		.loc 1 22 3 is_stmt 1 view .LVU13
 139 0006 FFF7FEFF 		bl	RF69_select
 140              	.LVL6:
  23:Src/rf69.c    ****   SPI_transfer8_RFM(addr);
 141              		.loc 1 23 3 view .LVU14
 142 000a 2846     		mov	r0, r5
 143 000c FFF7FEFF 		bl	SPI_transfer8_RFM
 144              	.LVL7:
  24:Src/rf69.c    ****   uint8_t regval = SPI_transfer8_RFM(val);
 145              		.loc 1 24 3 view .LVU15
 146              		.loc 1 24 20 is_stmt 0 view .LVU16
 147 0010 2046     		mov	r0, r4
 148 0012 FFF7FEFF 		bl	SPI_transfer8_RFM
 149              	.LVL8:
 150 0016 0446     		mov	r4, r0
 151              	.LVL9:
  25:Src/rf69.c    ****   RF69_unselect();
 152              		.loc 1 25 3 is_stmt 1 view .LVU17
 153 0018 FFF7FEFF 		bl	RF69_unselect
ARM GAS  /tmp/ccRBXKVw.s 			page 4


 154              	.LVL10:
  26:Src/rf69.c    ****   return regval;
 155              		.loc 1 26 3 view .LVU18
  27:Src/rf69.c    **** }
 156              		.loc 1 27 1 is_stmt 0 view .LVU19
 157 001c 2046     		mov	r0, r4
 158 001e 38BD     		pop	{r3, r4, r5, pc}
 159              		.loc 1 27 1 view .LVU20
 160              		.cfi_endproc
 161              	.LFE129:
 163              		.section	.text.readReg,"ax",%progbits
 164              		.align	1
 165              		.global	readReg
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	readReg:
 172              	.LVL11:
 173              	.LFB130:
  28:Src/rf69.c    **** 
  29:Src/rf69.c    **** // --------------------------------------------------------------------------
  30:Src/rf69.c    **** 
  31:Src/rf69.c    **** 
  32:Src/rf69.c    **** uint8_t readReg(uint8_t addr)
  33:Src/rf69.c    **** {
 174              		.loc 1 33 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		.loc 1 33 1 is_stmt 0 view .LVU22
 179 0000 10B5     		push	{r4, lr}
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 184 0002 0446     		mov	r4, r0
  34:Src/rf69.c    ****   RF69_select();
 185              		.loc 1 34 3 is_stmt 1 view .LVU23
 186 0004 FFF7FEFF 		bl	RF69_select
 187              	.LVL12:
  35:Src/rf69.c    ****   SPI_transfer8_RFM(addr & 0x7F);
 188              		.loc 1 35 3 view .LVU24
 189 0008 04F07F00 		and	r0, r4, #127
 190 000c FFF7FEFF 		bl	SPI_transfer8_RFM
 191              	.LVL13:
  36:Src/rf69.c    ****   uint8_t regval = SPI_transfer8_RFM(0);
 192              		.loc 1 36 3 view .LVU25
 193              		.loc 1 36 20 is_stmt 0 view .LVU26
 194 0010 0020     		movs	r0, #0
 195 0012 FFF7FEFF 		bl	SPI_transfer8_RFM
 196              	.LVL14:
 197 0016 0446     		mov	r4, r0
 198              	.LVL15:
  37:Src/rf69.c    ****   RF69_unselect();
 199              		.loc 1 37 3 is_stmt 1 view .LVU27
 200 0018 FFF7FEFF 		bl	RF69_unselect
ARM GAS  /tmp/ccRBXKVw.s 			page 5


 201              	.LVL16:
  38:Src/rf69.c    ****   return regval;
 202              		.loc 1 38 3 view .LVU28
  39:Src/rf69.c    **** }
 203              		.loc 1 39 1 is_stmt 0 view .LVU29
 204 001c 2046     		mov	r0, r4
 205 001e 10BD     		pop	{r4, pc}
 206              		.loc 1 39 1 view .LVU30
 207              		.cfi_endproc
 208              	.LFE130:
 210              		.section	.text.writeReg,"ax",%progbits
 211              		.align	1
 212              		.global	writeReg
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	writeReg:
 219              	.LVL17:
 220              	.LFB131:
  40:Src/rf69.c    **** 
  41:Src/rf69.c    **** void writeReg(uint8_t addr, uint8_t value)
  42:Src/rf69.c    **** {
 221              		.loc 1 42 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		.loc 1 42 1 is_stmt 0 view .LVU32
 226 0000 38B5     		push	{r3, r4, r5, lr}
 227              	.LCFI5:
 228              		.cfi_def_cfa_offset 16
 229              		.cfi_offset 3, -16
 230              		.cfi_offset 4, -12
 231              		.cfi_offset 5, -8
 232              		.cfi_offset 14, -4
 233 0002 0546     		mov	r5, r0
 234 0004 0C46     		mov	r4, r1
  43:Src/rf69.c    ****   RF69_select();
 235              		.loc 1 43 3 is_stmt 1 view .LVU33
 236 0006 FFF7FEFF 		bl	RF69_select
 237              	.LVL18:
  44:Src/rf69.c    ****   SPI_transfer8_RFM(addr | 0x80);
 238              		.loc 1 44 3 view .LVU34
 239 000a 45F08000 		orr	r0, r5, #128
 240 000e FFF7FEFF 		bl	SPI_transfer8_RFM
 241              	.LVL19:
  45:Src/rf69.c    ****   SPI_transfer8_RFM(value);
 242              		.loc 1 45 3 view .LVU35
 243 0012 2046     		mov	r0, r4
 244 0014 FFF7FEFF 		bl	SPI_transfer8_RFM
 245              	.LVL20:
  46:Src/rf69.c    ****   RF69_unselect();
 246              		.loc 1 46 3 view .LVU36
 247 0018 FFF7FEFF 		bl	RF69_unselect
 248              	.LVL21:
  47:Src/rf69.c    **** }
 249              		.loc 1 47 1 is_stmt 0 view .LVU37
ARM GAS  /tmp/ccRBXKVw.s 			page 6


 250 001c 38BD     		pop	{r3, r4, r5, pc}
 251              		.cfi_endproc
 252              	.LFE131:
 254              		.section	.text.chThdYield,"ax",%progbits
 255              		.align	1
 256              		.global	chThdYield
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	chThdYield:
 263              	.LFB132:
  48:Src/rf69.c    **** 
  49:Src/rf69.c    **** // --------------------------------------------------------------------------
  50:Src/rf69.c    **** 
  51:Src/rf69.c    **** void chThdYield () {
 264              		.loc 1 51 20 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
  52:Src/rf69.c    **** 
  53:Src/rf69.c    **** }
 269              		.loc 1 53 1 view .LVU39
 270 0000 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE132:
 274              		.section	.text.RF69_setMode,"ax",%progbits
 275              		.align	1
 276              		.global	RF69_setMode
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	RF69_setMode:
 283              	.LVL22:
 284              	.LFB133:
  54:Src/rf69.c    **** 
  55:Src/rf69.c    **** // --------------------------------------------------------------------------
  56:Src/rf69.c    **** 
  57:Src/rf69.c    **** void RF69_setMode (uint8_t newMode) {
 285              		.loc 1 57 37 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		.loc 1 57 37 is_stmt 0 view .LVU41
 290 0000 10B5     		push	{r4, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 295 0002 0446     		mov	r4, r0
  58:Src/rf69.c    ****   mode = newMode;
 296              		.loc 1 58 3 is_stmt 1 view .LVU42
 297              		.loc 1 58 8 is_stmt 0 view .LVU43
 298 0004 094B     		ldr	r3, .L19
 299 0006 1870     		strb	r0, [r3]
ARM GAS  /tmp/ccRBXKVw.s 			page 7


  59:Src/rf69.c    ****   writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | newMode);
 300              		.loc 1 59 3 is_stmt 1 view .LVU44
 301              		.loc 1 59 25 is_stmt 0 view .LVU45
 302 0008 0120     		movs	r0, #1
 303              	.LVL23:
 304              		.loc 1 59 25 view .LVU46
 305 000a FFF7FEFF 		bl	readReg
 306              	.LVL24:
 307              		.loc 1 59 25 view .LVU47
 308 000e 41B2     		sxtb	r1, r0
 309              		.loc 1 59 45 view .LVU48
 310 0010 21F01C01 		bic	r1, r1, #28
 311              		.loc 1 59 53 view .LVU49
 312 0014 2143     		orrs	r1, r1, r4
 313              		.loc 1 59 3 view .LVU50
 314 0016 C9B2     		uxtb	r1, r1
 315 0018 0120     		movs	r0, #1
 316 001a FFF7FEFF 		bl	writeReg
 317              	.LVL25:
  60:Src/rf69.c    ****   while ((readReg(REG_IRQFLAGS1) & IRQ1_MODEREADY) == 0)
 318              		.loc 1 60 3 is_stmt 1 view .LVU51
 319              	.L17:
  61:Src/rf69.c    ****     ;
 320              		.loc 1 61 5 discriminator 1 view .LVU52
  60:Src/rf69.c    ****   while ((readReg(REG_IRQFLAGS1) & IRQ1_MODEREADY) == 0)
 321              		.loc 1 60 9 discriminator 1 view .LVU53
  60:Src/rf69.c    ****   while ((readReg(REG_IRQFLAGS1) & IRQ1_MODEREADY) == 0)
 322              		.loc 1 60 11 is_stmt 0 discriminator 1 view .LVU54
 323 001e 2720     		movs	r0, #39
 324 0020 FFF7FEFF 		bl	readReg
 325              	.LVL26:
  60:Src/rf69.c    ****   while ((readReg(REG_IRQFLAGS1) & IRQ1_MODEREADY) == 0)
 326              		.loc 1 60 9 discriminator 1 view .LVU55
 327 0024 10F0800F 		tst	r0, #128
 328 0028 F9D0     		beq	.L17
  62:Src/rf69.c    **** }
 329              		.loc 1 62 1 view .LVU56
 330 002a 10BD     		pop	{r4, pc}
 331              	.L20:
 332              		.align	2
 333              	.L19:
 334 002c 00000000 		.word	mode
 335              		.cfi_endproc
 336              	.LFE133:
 338              		.section	.text.RF69_setFrequency,"ax",%progbits
 339              		.align	1
 340              		.global	RF69_setFrequency
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	RF69_setFrequency:
 347              	.LVL27:
 348              	.LFB134:
  63:Src/rf69.c    **** 
  64:Src/rf69.c    **** void RF69_setFrequency (uint32_t hz) {
 349              		.loc 1 64 38 is_stmt 1 view -0
ARM GAS  /tmp/ccRBXKVw.s 			page 8


 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		.loc 1 64 38 is_stmt 0 view .LVU58
 354 0000 38B5     		push	{r3, r4, r5, lr}
 355              	.LCFI7:
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 3, -16
 358              		.cfi_offset 4, -12
 359              		.cfi_offset 5, -8
 360              		.cfi_offset 14, -4
  65:Src/rf69.c    ****   // accept any frequency scale as input, including kHz and MHz
  66:Src/rf69.c    ****   // multiply by 10 until freq >= 100 MHz (don't specify 0 as input!)
  67:Src/rf69.c    ****   while (hz < 100000000)
 361              		.loc 1 67 3 is_stmt 1 view .LVU59
 362              	.LVL28:
 363              	.L22:
 364              		.loc 1 67 9 view .LVU60
 365 0002 0E4B     		ldr	r3, .L26
 366 0004 9842     		cmp	r0, r3
 367 0006 03D8     		bhi	.L25
  68:Src/rf69.c    ****     hz *= 10;
 368              		.loc 1 68 5 view .LVU61
 369              		.loc 1 68 8 is_stmt 0 view .LVU62
 370 0008 00EB8000 		add	r0, r0, r0, lsl #2
 371              	.LVL29:
 372              		.loc 1 68 8 view .LVU63
 373 000c 4000     		lsls	r0, r0, #1
 374              	.LVL30:
 375              		.loc 1 68 8 view .LVU64
 376 000e F8E7     		b	.L22
 377              	.L25:
  69:Src/rf69.c    **** 
  70:Src/rf69.c    ****   // Frequency steps are in units of (32,000,000 >> 19) = 61.03515625 Hz
  71:Src/rf69.c    ****   // use multiples of 64 to avoid multi-precision arithmetic, i.e. 3906.25 Hz
  72:Src/rf69.c    ****   // due to this, the lower 6 bits of the calculated factor will always be 0
  73:Src/rf69.c    ****   // this is still 4 ppm, i.e. well below the radio's 32 MHz crystal accuracy
  74:Src/rf69.c    ****   // 868.0 MHz = 0xD90000, 868.3 MHz = 0xD91300, 915.0 MHz = 0xE4C000
  75:Src/rf69.c    ****   // 434.0 MHz = 0x6C8000.
  76:Src/rf69.c    ****   uint32_t frf = (hz << 2) / (32000000L >> 11);
 378              		.loc 1 76 3 is_stmt 1 view .LVU65
 379              		.loc 1 76 22 is_stmt 0 view .LVU66
 380 0010 8000     		lsls	r0, r0, #2
 381              	.LVL31:
 382              		.loc 1 76 12 view .LVU67
 383 0012 0B4C     		ldr	r4, .L26+4
 384 0014 A4FB0034 		umull	r3, r4, r4, r0
 385 0018 250B     		lsrs	r5, r4, #12
 386              	.LVL32:
  77:Src/rf69.c    ****   writeReg(REG_FRFMSB, frf >> 10);
 387              		.loc 1 77 3 is_stmt 1 view .LVU68
 388 001a C4F38751 		ubfx	r1, r4, #22, #8
 389 001e 0720     		movs	r0, #7
 390 0020 FFF7FEFF 		bl	writeReg
 391              	.LVL33:
  78:Src/rf69.c    ****   writeReg(REG_FRFMSB+1, frf >> 2);
 392              		.loc 1 78 3 view .LVU69
ARM GAS  /tmp/ccRBXKVw.s 			page 9


 393 0024 C4F38731 		ubfx	r1, r4, #14, #8
 394 0028 0820     		movs	r0, #8
 395 002a FFF7FEFF 		bl	writeReg
 396              	.LVL34:
  79:Src/rf69.c    ****   writeReg(REG_FRFMSB+2, frf << 6);
 397              		.loc 1 79 3 view .LVU70
 398 002e A901     		lsls	r1, r5, #6
 399 0030 01F0C001 		and	r1, r1, #192
 400 0034 0920     		movs	r0, #9
 401 0036 FFF7FEFF 		bl	writeReg
 402              	.LVL35:
  80:Src/rf69.c    **** }
 403              		.loc 1 80 1 is_stmt 0 view .LVU71
 404 003a 38BD     		pop	{r3, r4, r5, pc}
 405              	.LVL36:
 406              	.L27:
 407              		.loc 1 80 1 view .LVU72
 408              		.align	2
 409              	.L26:
 410 003c FFE0F505 		.word	99999999
 411 0040 83DE1B43 		.word	1125899907
 412              		.cfi_endproc
 413              	.LFE134:
 415              		.section	.text.RF69_configure,"ax",%progbits
 416              		.align	1
 417              		.global	RF69_configure
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv4-sp-d16
 423              	RF69_configure:
 424              	.LVL37:
 425              	.LFB135:
  81:Src/rf69.c    **** 
  82:Src/rf69.c    **** void RF69_configure (const uint8_t* p) {
 426              		.loc 1 82 40 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		.loc 1 82 40 is_stmt 0 view .LVU74
 431 0000 10B5     		push	{r4, lr}
 432              	.LCFI8:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
 436 0002 0446     		mov	r4, r0
 437              	.LVL38:
 438              	.L30:
  83:Src/rf69.c    ****   while (true) {
 439              		.loc 1 83 3 is_stmt 1 view .LVU75
 440              	.LBB2:
  84:Src/rf69.c    ****     uint8_t cmd = p[0];
 441              		.loc 1 84 5 view .LVU76
 442              		.loc 1 84 13 is_stmt 0 view .LVU77
 443 0004 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 444              	.LVL39:
  85:Src/rf69.c    ****     if (cmd == 0)
ARM GAS  /tmp/ccRBXKVw.s 			page 10


 445              		.loc 1 85 5 is_stmt 1 view .LVU78
 446              		.loc 1 85 8 is_stmt 0 view .LVU79
 447 0006 20B1     		cbz	r0, .L28
  86:Src/rf69.c    ****       break;
  87:Src/rf69.c    ****     writeReg(cmd, p[1]);
 448              		.loc 1 87 5 is_stmt 1 view .LVU80
 449 0008 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 450 000a FFF7FEFF 		bl	writeReg
 451              	.LVL40:
  88:Src/rf69.c    ****     p += 2;
 452              		.loc 1 88 5 view .LVU81
 453              		.loc 1 88 7 is_stmt 0 view .LVU82
 454 000e 0234     		adds	r4, r4, #2
 455              	.LVL41:
 456              		.loc 1 88 7 view .LVU83
 457              	.LBE2:
  83:Src/rf69.c    ****     uint8_t cmd = p[0];
 458              		.loc 1 83 9 is_stmt 1 view .LVU84
  83:Src/rf69.c    ****     uint8_t cmd = p[0];
 459              		.loc 1 83 16 is_stmt 0 view .LVU85
 460 0010 F8E7     		b	.L30
 461              	.LVL42:
 462              	.L28:
  89:Src/rf69.c    ****   }
  90:Src/rf69.c    **** }
 463              		.loc 1 90 1 view .LVU86
 464 0012 10BD     		pop	{r4, pc}
 465              		.loc 1 90 1 view .LVU87
 466              		.cfi_endproc
 467              	.LFE135:
 469              		.section	.text.RF69_init,"ax",%progbits
 470              		.align	1
 471              		.global	RF69_init
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	RF69_init:
 478              	.LVL43:
 479              	.LFB136:
  91:Src/rf69.c    **** 
  92:Src/rf69.c    **** void RF69_init (uint8_t id, uint8_t group, int freq) {
 480              		.loc 1 92 54 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		.loc 1 92 54 is_stmt 0 view .LVU89
 485 0000 70B5     		push	{r4, r5, r6, lr}
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 16
 488              		.cfi_offset 4, -16
 489              		.cfi_offset 5, -12
 490              		.cfi_offset 6, -8
 491              		.cfi_offset 14, -4
 492 0002 0C46     		mov	r4, r1
 493 0004 1546     		mov	r5, r2
  93:Src/rf69.c    ****   myId = id;
ARM GAS  /tmp/ccRBXKVw.s 			page 11


 494              		.loc 1 93 3 is_stmt 1 view .LVU90
 495              		.loc 1 93 8 is_stmt 0 view .LVU91
 496 0006 184B     		ldr	r3, .L36
 497 0008 1870     		strb	r0, [r3]
  94:Src/rf69.c    **** 
  95:Src/rf69.c    ****   // b7 = group b7^b5^b3^b1, b6 = group b6^b4^b2^b0
  96:Src/rf69.c    ****   parity = group ^ (group << 4);
 498              		.loc 1 96 3 is_stmt 1 view .LVU92
 499              		.loc 1 96 18 is_stmt 0 view .LVU93
 500 000a 81EA0111 		eor	r1, r1, r1, lsl #4
 501              	.LVL44:
 502              		.loc 1 96 18 view .LVU94
 503 000e 4BB2     		sxtb	r3, r1
 504 0010 C9B2     		uxtb	r1, r1
  97:Src/rf69.c    ****   parity = (parity ^ (parity << 2)) & 0xC0;
 505              		.loc 1 97 3 is_stmt 1 view .LVU95
 506              		.loc 1 97 20 is_stmt 0 view .LVU96
 507 0012 83EA8103 		eor	r3, r3, r1, lsl #2
 508              		.loc 1 97 37 view .LVU97
 509 0016 03F0C003 		and	r3, r3, #192
 510              		.loc 1 97 10 view .LVU98
 511 001a 144A     		ldr	r2, .L36+4
 512              	.LVL45:
 513              		.loc 1 97 10 view .LVU99
 514 001c 1370     		strb	r3, [r2]
  98:Src/rf69.c    **** 
  99:Src/rf69.c    ****   // 10 MHz, i.e. 30 MHz / 3 (or 4 MHz if clock is still at 12 MHz)
 100:Src/rf69.c    ****   // spi_master(3);
 101:Src/rf69.c    ****   RFM69_SetCSPin(1);
 515              		.loc 1 101 3 is_stmt 1 view .LVU100
 516 001e 0120     		movs	r0, #1
 517              	.LVL46:
 518              		.loc 1 101 3 is_stmt 0 view .LVU101
 519 0020 FFF7FEFF 		bl	RFM69_SetCSPin
 520              	.LVL47:
 521              	.L33:
 102:Src/rf69.c    ****   
 103:Src/rf69.c    ****   do {
 522              		.loc 1 103 3 is_stmt 1 discriminator 1 view .LVU102
 104:Src/rf69.c    ****     writeReg(REG_SYNCVALUE1, 0xAA);
 523              		.loc 1 104 5 discriminator 1 view .LVU103
 524 0024 AA21     		movs	r1, #170
 525 0026 2F20     		movs	r0, #47
 526 0028 FFF7FEFF 		bl	writeReg
 527              	.LVL48:
 105:Src/rf69.c    ****   } while (readReg(REG_SYNCVALUE1) != 0xAA);
 528              		.loc 1 105 11 discriminator 1 view .LVU104
 529              		.loc 1 105 12 is_stmt 0 discriminator 1 view .LVU105
 530 002c 2F20     		movs	r0, #47
 531 002e FFF7FEFF 		bl	readReg
 532              	.LVL49:
 533              		.loc 1 105 3 discriminator 1 view .LVU106
 534 0032 AA28     		cmp	r0, #170
 535 0034 F6D1     		bne	.L33
 536              	.L34:
 106:Src/rf69.c    ****   
 107:Src/rf69.c    ****   do {
ARM GAS  /tmp/ccRBXKVw.s 			page 12


 537              		.loc 1 107 3 is_stmt 1 discriminator 1 view .LVU107
 108:Src/rf69.c    ****     writeReg(REG_SYNCVALUE1, 0x55);
 538              		.loc 1 108 5 discriminator 1 view .LVU108
 539 0036 5521     		movs	r1, #85
 540 0038 2F20     		movs	r0, #47
 541 003a FFF7FEFF 		bl	writeReg
 542              	.LVL50:
 109:Src/rf69.c    ****   } while (readReg(REG_SYNCVALUE1) != 0x55);
 543              		.loc 1 109 11 discriminator 1 view .LVU109
 544              		.loc 1 109 12 is_stmt 0 discriminator 1 view .LVU110
 545 003e 2F20     		movs	r0, #47
 546 0040 FFF7FEFF 		bl	readReg
 547              	.LVL51:
 548              		.loc 1 109 3 discriminator 1 view .LVU111
 549 0044 5528     		cmp	r0, #85
 550 0046 F6D1     		bne	.L34
 110:Src/rf69.c    ****   
 111:Src/rf69.c    ****   RF69_configure(configRegs);
 551              		.loc 1 111 3 is_stmt 1 view .LVU112
 552 0048 094E     		ldr	r6, .L36+8
 553 004a 3046     		mov	r0, r6
 554 004c FFF7FEFF 		bl	RF69_configure
 555              	.LVL52:
 112:Src/rf69.c    ****   RF69_configure(configRegs);
 556              		.loc 1 112 3 view .LVU113
 557 0050 3046     		mov	r0, r6
 558 0052 FFF7FEFF 		bl	RF69_configure
 559              	.LVL53:
 113:Src/rf69.c    ****   RF69_setFrequency(freq);
 560              		.loc 1 113 3 view .LVU114
 561 0056 2846     		mov	r0, r5
 562 0058 FFF7FEFF 		bl	RF69_setFrequency
 563              	.LVL54:
 114:Src/rf69.c    **** 
 115:Src/rf69.c    ****   writeReg(REG_SYNCVALUE2, group);
 564              		.loc 1 115 3 view .LVU115
 565 005c 2146     		mov	r1, r4
 566 005e 3020     		movs	r0, #48
 567 0060 FFF7FEFF 		bl	writeReg
 568              	.LVL55:
 116:Src/rf69.c    **** }
 569              		.loc 1 116 1 is_stmt 0 view .LVU116
 570 0064 70BD     		pop	{r4, r5, r6, pc}
 571              	.LVL56:
 572              	.L37:
 573              		.loc 1 116 1 view .LVU117
 574 0066 00BF     		.align	2
 575              	.L36:
 576 0068 00000000 		.word	myId
 577 006c 00000000 		.word	parity
 578 0070 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE136:
 582              		.section	.text.RF69_encrypt,"ax",%progbits
 583              		.align	1
 584              		.global	RF69_encrypt
 585              		.syntax unified
ARM GAS  /tmp/ccRBXKVw.s 			page 13


 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	RF69_encrypt:
 591              	.LVL57:
 592              	.LFB137:
 117:Src/rf69.c    **** 
 118:Src/rf69.c    **** void RF69_encrypt (const char* key) {
 593              		.loc 1 118 37 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		.loc 1 118 37 is_stmt 0 view .LVU119
 598 0000 70B5     		push	{r4, r5, r6, lr}
 599              	.LCFI10:
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 4, -16
 602              		.cfi_offset 5, -12
 603              		.cfi_offset 6, -8
 604              		.cfi_offset 14, -4
 605 0002 0546     		mov	r5, r0
 119:Src/rf69.c    ****   uint8_t cfg = readReg(REG_PKTCONFIG2) & ~0x01;
 606              		.loc 1 119 3 is_stmt 1 view .LVU120
 607              		.loc 1 119 17 is_stmt 0 view .LVU121
 608 0004 3D20     		movs	r0, #61
 609              	.LVL58:
 610              		.loc 1 119 17 view .LVU122
 611 0006 FFF7FEFF 		bl	readReg
 612              	.LVL59:
 613              		.loc 1 119 11 view .LVU123
 614 000a 00F0FE06 		and	r6, r0, #254
 615              	.LVL60:
 120:Src/rf69.c    ****   if (key) {
 616              		.loc 1 120 3 is_stmt 1 view .LVU124
 617              		.loc 1 120 6 is_stmt 0 view .LVU125
 618 000e 8DB1     		cbz	r5, .L40
 619              	.LBB3:
 121:Src/rf69.c    ****     for (int i = 0; i < 16; ++i) {
 620              		.loc 1 121 14 view .LVU126
 621 0010 0024     		movs	r4, #0
 622 0012 00E0     		b	.L39
 623              	.LVL61:
 624              	.L41:
 625              		.loc 1 121 29 is_stmt 1 discriminator 2 view .LVU127
 626 0014 0134     		adds	r4, r4, #1
 627              	.LVL62:
 628              	.L39:
 629              		.loc 1 121 21 discriminator 1 view .LVU128
 630              		.loc 1 121 5 is_stmt 0 discriminator 1 view .LVU129
 631 0016 0F2C     		cmp	r4, #15
 632 0018 0ADC     		bgt	.L45
 122:Src/rf69.c    ****       writeReg(REG_AESKEYMSB + i, *key);
 633              		.loc 1 122 7 is_stmt 1 view .LVU130
 634 001a 04F13E00 		add	r0, r4, #62
 635 001e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 636 0020 C0B2     		uxtb	r0, r0
 637 0022 FFF7FEFF 		bl	writeReg
ARM GAS  /tmp/ccRBXKVw.s 			page 14


 638              	.LVL63:
 123:Src/rf69.c    ****       if (*key != 0)
 639              		.loc 1 123 7 view .LVU131
 640              		.loc 1 123 11 is_stmt 0 view .LVU132
 641 0026 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 642              		.loc 1 123 10 view .LVU133
 643 0028 002B     		cmp	r3, #0
 644 002a F3D0     		beq	.L41
 124:Src/rf69.c    ****         ++key;
 645              		.loc 1 124 9 is_stmt 1 view .LVU134
 646 002c 0135     		adds	r5, r5, #1
 647              	.LVL64:
 648              		.loc 1 124 9 is_stmt 0 view .LVU135
 649 002e F1E7     		b	.L41
 650              	.L45:
 651              		.loc 1 124 9 view .LVU136
 652              	.LBE3:
 125:Src/rf69.c    ****     }
 126:Src/rf69.c    ****     cfg |= 0x01;
 653              		.loc 1 126 5 is_stmt 1 view .LVU137
 654              		.loc 1 126 9 is_stmt 0 view .LVU138
 655 0030 46F00106 		orr	r6, r6, #1
 656              	.LVL65:
 657              	.L40:
 127:Src/rf69.c    ****   }
 128:Src/rf69.c    ****   writeReg(REG_PKTCONFIG2, cfg);
 658              		.loc 1 128 3 is_stmt 1 view .LVU139
 659 0034 3146     		mov	r1, r6
 660 0036 3D20     		movs	r0, #61
 661 0038 FFF7FEFF 		bl	writeReg
 662              	.LVL66:
 129:Src/rf69.c    **** }
 663              		.loc 1 129 1 is_stmt 0 view .LVU140
 664 003c 70BD     		pop	{r4, r5, r6, pc}
 665              		.loc 1 129 1 view .LVU141
 666              		.cfi_endproc
 667              	.LFE137:
 669              		.section	.text.RF69_txPower,"ax",%progbits
 670              		.align	1
 671              		.global	RF69_txPower
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	RF69_txPower:
 678              	.LVL67:
 679              	.LFB138:
 130:Src/rf69.c    **** 
 131:Src/rf69.c    **** void RF69_txPower (uint8_t level) {
 680              		.loc 1 131 35 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		.loc 1 131 35 is_stmt 0 view .LVU143
 685 0000 10B5     		push	{r4, lr}
 686              	.LCFI11:
 687              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccRBXKVw.s 			page 15


 688              		.cfi_offset 4, -8
 689              		.cfi_offset 14, -4
 690 0002 0446     		mov	r4, r0
 132:Src/rf69.c    ****   writeReg(REG_PALEVEL, (readReg(REG_PALEVEL) & ~0x1F) | level);
 691              		.loc 1 132 3 is_stmt 1 view .LVU144
 692              		.loc 1 132 26 is_stmt 0 view .LVU145
 693 0004 1120     		movs	r0, #17
 694              	.LVL68:
 695              		.loc 1 132 26 view .LVU146
 696 0006 FFF7FEFF 		bl	readReg
 697              	.LVL69:
 698 000a 41B2     		sxtb	r1, r0
 699              		.loc 1 132 47 view .LVU147
 700 000c 21F01F01 		bic	r1, r1, #31
 701              		.loc 1 132 56 view .LVU148
 702 0010 2143     		orrs	r1, r1, r4
 703              		.loc 1 132 3 view .LVU149
 704 0012 C9B2     		uxtb	r1, r1
 705 0014 1120     		movs	r0, #17
 706 0016 FFF7FEFF 		bl	writeReg
 707              	.LVL70:
 133:Src/rf69.c    **** }
 708              		.loc 1 133 1 view .LVU150
 709 001a 10BD     		pop	{r4, pc}
 710              		.cfi_endproc
 711              	.LFE138:
 713              		.section	.text.RF69_sleep,"ax",%progbits
 714              		.align	1
 715              		.global	RF69_sleep
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	RF69_sleep:
 722              	.LFB139:
 134:Src/rf69.c    **** 
 135:Src/rf69.c    **** void RF69_sleep () {
 723              		.loc 1 135 20 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727 0000 08B5     		push	{r3, lr}
 728              	.LCFI12:
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 3, -8
 731              		.cfi_offset 14, -4
 136:Src/rf69.c    ****   RF69_setMode(MODE_SLEEP);
 732              		.loc 1 136 3 view .LVU152
 733 0002 0020     		movs	r0, #0
 734 0004 FFF7FEFF 		bl	RF69_setMode
 735              	.LVL71:
 137:Src/rf69.c    **** }
 736              		.loc 1 137 1 is_stmt 0 view .LVU153
 737 0008 08BD     		pop	{r3, pc}
 738              		.cfi_endproc
 739              	.LFE139:
 741              		.section	.text.RF69_receive,"ax",%progbits
ARM GAS  /tmp/ccRBXKVw.s 			page 16


 742              		.align	1
 743              		.global	RF69_receive
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	RF69_receive:
 750              	.LVL72:
 751              	.LFB140:
 138:Src/rf69.c    **** 
 139:Src/rf69.c    **** int8_t RF69_receive (void* ptr, uint8_t len) {
 752              		.loc 1 139 46 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		.loc 1 139 46 is_stmt 0 view .LVU155
 757 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 758              	.LCFI13:
 759              		.cfi_def_cfa_offset 24
 760              		.cfi_offset 3, -24
 761              		.cfi_offset 4, -20
 762              		.cfi_offset 5, -16
 763              		.cfi_offset 6, -12
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 140:Src/rf69.c    ****   if (mode != MODE_RECEIVE) {
 766              		.loc 1 140 3 is_stmt 1 view .LVU156
 767              		.loc 1 140 12 is_stmt 0 view .LVU157
 768 0002 324B     		ldr	r3, .L65
 769 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 770              		.loc 1 140 6 view .LVU158
 771 0006 102B     		cmp	r3, #16
 772 0008 20D1     		bne	.L62
 773 000a 0746     		mov	r7, r0
 774 000c 0E46     		mov	r6, r1
 775              	.LBB4:
 141:Src/rf69.c    ****     RF69_setMode(MODE_RECEIVE);
 142:Src/rf69.c    ****   } else {
 143:Src/rf69.c    ****     static uint8_t lastFlag;
 776              		.loc 1 143 5 is_stmt 1 view .LVU159
 144:Src/rf69.c    ****     if ((readReg(REG_IRQFLAGS1) & IRQ1_RXREADY) != lastFlag) {
 777              		.loc 1 144 5 view .LVU160
 778              		.loc 1 144 10 is_stmt 0 view .LVU161
 779 000e 2720     		movs	r0, #39
 780              	.LVL73:
 781              		.loc 1 144 10 view .LVU162
 782 0010 FFF7FEFF 		bl	readReg
 783              	.LVL74:
 784              		.loc 1 144 49 view .LVU163
 785 0014 2E4B     		ldr	r3, .L65+4
 786 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787              		.loc 1 144 8 view .LVU164
 788 0018 00F04000 		and	r0, r0, #64
 789 001c 8342     		cmp	r3, r0
 790 001e 04D0     		beq	.L53
 145:Src/rf69.c    ****       lastFlag ^= IRQ1_RXREADY;
 791              		.loc 1 145 7 is_stmt 1 view .LVU165
ARM GAS  /tmp/ccRBXKVw.s 			page 17


 792              		.loc 1 145 16 is_stmt 0 view .LVU166
 793 0020 83F04003 		eor	r3, r3, #64
 794 0024 2A4A     		ldr	r2, .L65+4
 795 0026 1370     		strb	r3, [r2]
 146:Src/rf69.c    ****       if (lastFlag) { // flag just went from 0 to 1
 796              		.loc 1 146 7 is_stmt 1 view .LVU167
 797              		.loc 1 146 10 is_stmt 0 view .LVU168
 798 0028 B3B9     		cbnz	r3, .L63
 799              	.L53:
 147:Src/rf69.c    ****         lna = (readReg(REG_LNAVALUE) >> 3) & 0x7;
 148:Src/rf69.c    **** //        rssi = readReg(REG_RSSIVALUE);  // It appears this can report RSSI of the previous packet
 149:Src/rf69.c    **** #if RF69_SPI_BULK
 150:Src/rf69.c    ****         RF69_select();
 151:Src/rf69.c    ****         SPI_transfer8_RFM(REG_AFCMSB);
 152:Src/rf69.c    ****         afc = SPI_transfer8_RFM(0) << 8;
 153:Src/rf69.c    ****         afc |= SPI_transfer8_RFM(0);
 154:Src/rf69.c    ****         RF69_unselect();
 155:Src/rf69.c    **** #else
 156:Src/rf69.c    ****         afc = readReg(REG_AFCMSB) << 8;
 157:Src/rf69.c    ****         afc |= readReg(REG_AFCLSB);
 158:Src/rf69.c    **** #endif
 159:Src/rf69.c    ****       }
 160:Src/rf69.c    ****     }
 161:Src/rf69.c    **** 
 162:Src/rf69.c    ****     if (readReg(REG_IRQFLAGS2) & IRQ2_PAYLOADREADY) {
 800              		.loc 1 162 5 is_stmt 1 view .LVU169
 801              		.loc 1 162 9 is_stmt 0 view .LVU170
 802 002a 2820     		movs	r0, #40
 803 002c FFF7FEFF 		bl	readReg
 804              	.LVL75:
 805              		.loc 1 162 8 view .LVU171
 806 0030 10F0040F 		tst	r0, #4
 807 0034 41D0     		beq	.L58
 808              	.LBB5:
 163:Src/rf69.c    **** 
 164:Src/rf69.c    **** #if RF69_SPI_BULK
 165:Src/rf69.c    ****       RF69_select();
 166:Src/rf69.c    ****       SPI_transfer8_RFM(REG_FIFO);
 167:Src/rf69.c    ****       uint8_t count = SPI_transfer8_RFM(0);
 168:Src/rf69.c    ****       for (uint8_t i = 0; i < count; ++i) {
 169:Src/rf69.c    ****         uint8_t v = SPI_transfer8_RFM(0);
 170:Src/rf69.c    ****         if (i < len)
 171:Src/rf69.c    ****           ((uint8_t*) ptr)[i] = v;
 172:Src/rf69.c    ****       }
 173:Src/rf69.c    ****       RF69_unselect();
 174:Src/rf69.c    **** #else
 175:Src/rf69.c    ****       rssi = readReg(REG_RSSIVALUE);   // Duplicated here - RW
 809              		.loc 1 175 7 is_stmt 1 view .LVU172
 810              		.loc 1 175 14 is_stmt 0 view .LVU173
 811 0036 2420     		movs	r0, #36
 812 0038 FFF7FEFF 		bl	readReg
 813              	.LVL76:
 814              		.loc 1 175 12 view .LVU174
 815 003c 254B     		ldr	r3, .L65+8
 816 003e 1870     		strb	r0, [r3]
 176:Src/rf69.c    ****       uint8_t count = readReg(REG_FIFO);
 817              		.loc 1 176 7 is_stmt 1 view .LVU175
ARM GAS  /tmp/ccRBXKVw.s 			page 18


 818              		.loc 1 176 23 is_stmt 0 view .LVU176
 819 0040 0020     		movs	r0, #0
 820 0042 FFF7FEFF 		bl	readReg
 821              	.LVL77:
 822 0046 0546     		mov	r5, r0
 823              	.LVL78:
 177:Src/rf69.c    ****       for (uint8_t i = 0; i < count; ++i) {
 824              		.loc 1 177 7 is_stmt 1 view .LVU177
 825              	.LBB6:
 826              		.loc 1 177 12 view .LVU178
 827              		.loc 1 177 20 is_stmt 0 view .LVU179
 828 0048 0024     		movs	r4, #0
 829              		.loc 1 177 7 view .LVU180
 830 004a 1BE0     		b	.L54
 831              	.LVL79:
 832              	.L62:
 833              		.loc 1 177 7 view .LVU181
 834              	.LBE6:
 835              	.LBE5:
 836              	.LBE4:
 141:Src/rf69.c    ****   } else {
 837              		.loc 1 141 5 is_stmt 1 view .LVU182
 838 004c 1020     		movs	r0, #16
 839              	.LVL80:
 141:Src/rf69.c    ****   } else {
 840              		.loc 1 141 5 is_stmt 0 view .LVU183
 841 004e FFF7FEFF 		bl	RF69_setMode
 842              	.LVL81:
 178:Src/rf69.c    ****         uint8_t v = readReg(REG_FIFO);
 179:Src/rf69.c    ****         if (i < len)
 180:Src/rf69.c    ****           ((uint8_t*) ptr)[i] = v;
 181:Src/rf69.c    ****       }
 182:Src/rf69.c    **** #endif
 183:Src/rf69.c    **** 
 184:Src/rf69.c    ****       // only accept packets intended for us, or broadcasts
 185:Src/rf69.c    ****       // ... or any packet if we're the special catch-all node
 186:Src/rf69.c    ****       uint8_t dest = *(uint8_t*) ptr;
 187:Src/rf69.c    ****       if ((dest & 0xC0) == parity) {
 188:Src/rf69.c    ****         uint8_t destId = dest & 0x3F;
 189:Src/rf69.c    ****         if (destId == myId || destId == 0 || myId == 63) {
 190:Src/rf69.c    ****           return count;
 191:Src/rf69.c    ****         }
 192:Src/rf69.c    ****       }
 193:Src/rf69.c    ****     }
 194:Src/rf69.c    ****   }
 195:Src/rf69.c    ****   return -1;
 843              		.loc 1 195 10 view .LVU184
 844 0052 4FF0FF30 		mov	r0, #-1
 845 0056 2FE0     		b	.L52
 846              	.LVL82:
 847              	.L63:
 848              	.LBB11:
 147:Src/rf69.c    **** //        rssi = readReg(REG_RSSIVALUE);  // It appears this can report RSSI of the previous packet
 849              		.loc 1 147 9 is_stmt 1 view .LVU185
 147:Src/rf69.c    **** //        rssi = readReg(REG_RSSIVALUE);  // It appears this can report RSSI of the previous packet
 850              		.loc 1 147 16 is_stmt 0 view .LVU186
 851 0058 1820     		movs	r0, #24
ARM GAS  /tmp/ccRBXKVw.s 			page 19


 852 005a FFF7FEFF 		bl	readReg
 853              	.LVL83:
 147:Src/rf69.c    **** //        rssi = readReg(REG_RSSIVALUE);  // It appears this can report RSSI of the previous packet
 854              		.loc 1 147 44 view .LVU187
 855 005e C0F3C200 		ubfx	r0, r0, #3, #3
 147:Src/rf69.c    **** //        rssi = readReg(REG_RSSIVALUE);  // It appears this can report RSSI of the previous packet
 856              		.loc 1 147 13 view .LVU188
 857 0062 1D4B     		ldr	r3, .L65+12
 858 0064 1870     		strb	r0, [r3]
 156:Src/rf69.c    ****         afc |= readReg(REG_AFCLSB);
 859              		.loc 1 156 9 is_stmt 1 view .LVU189
 156:Src/rf69.c    ****         afc |= readReg(REG_AFCLSB);
 860              		.loc 1 156 15 is_stmt 0 view .LVU190
 861 0066 1F20     		movs	r0, #31
 862 0068 FFF7FEFF 		bl	readReg
 863              	.LVL84:
 156:Src/rf69.c    ****         afc |= readReg(REG_AFCLSB);
 864              		.loc 1 156 13 view .LVU191
 865 006c 1B4C     		ldr	r4, .L65+16
 866 006e 0023     		movs	r3, #0
 867 0070 2370     		strb	r3, [r4]
 157:Src/rf69.c    **** #endif
 868              		.loc 1 157 9 is_stmt 1 view .LVU192
 157:Src/rf69.c    **** #endif
 869              		.loc 1 157 16 is_stmt 0 view .LVU193
 870 0072 2020     		movs	r0, #32
 871 0074 FFF7FEFF 		bl	readReg
 872              	.LVL85:
 157:Src/rf69.c    **** #endif
 873              		.loc 1 157 13 view .LVU194
 874 0078 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 875 007a 1843     		orrs	r0, r0, r3
 876 007c 2070     		strb	r0, [r4]
 877 007e D4E7     		b	.L53
 878              	.LVL86:
 879              	.L55:
 880              	.LBB10:
 881              	.LBB8:
 177:Src/rf69.c    ****         uint8_t v = readReg(REG_FIFO);
 882              		.loc 1 177 38 is_stmt 1 discriminator 2 view .LVU195
 883 0080 0134     		adds	r4, r4, #1
 884              	.LVL87:
 177:Src/rf69.c    ****         uint8_t v = readReg(REG_FIFO);
 885              		.loc 1 177 38 is_stmt 0 discriminator 2 view .LVU196
 886 0082 E4B2     		uxtb	r4, r4
 887              	.LVL88:
 888              	.L54:
 177:Src/rf69.c    ****         uint8_t v = readReg(REG_FIFO);
 889              		.loc 1 177 27 is_stmt 1 discriminator 1 view .LVU197
 177:Src/rf69.c    ****         uint8_t v = readReg(REG_FIFO);
 890              		.loc 1 177 7 is_stmt 0 discriminator 1 view .LVU198
 891 0084 AC42     		cmp	r4, r5
 892 0086 06D2     		bcs	.L64
 893              	.LBB7:
 178:Src/rf69.c    ****         if (i < len)
 894              		.loc 1 178 9 is_stmt 1 view .LVU199
 178:Src/rf69.c    ****         if (i < len)
ARM GAS  /tmp/ccRBXKVw.s 			page 20


 895              		.loc 1 178 21 is_stmt 0 view .LVU200
 896 0088 0020     		movs	r0, #0
 897 008a FFF7FEFF 		bl	readReg
 898              	.LVL89:
 179:Src/rf69.c    ****           ((uint8_t*) ptr)[i] = v;
 899              		.loc 1 179 9 is_stmt 1 view .LVU201
 179:Src/rf69.c    ****           ((uint8_t*) ptr)[i] = v;
 900              		.loc 1 179 12 is_stmt 0 view .LVU202
 901 008e B442     		cmp	r4, r6
 902 0090 F6D2     		bcs	.L55
 180:Src/rf69.c    ****       }
 903              		.loc 1 180 11 is_stmt 1 view .LVU203
 180:Src/rf69.c    ****       }
 904              		.loc 1 180 31 is_stmt 0 view .LVU204
 905 0092 3855     		strb	r0, [r7, r4]
 906 0094 F4E7     		b	.L55
 907              	.LVL90:
 908              	.L64:
 180:Src/rf69.c    ****       }
 909              		.loc 1 180 31 view .LVU205
 910              	.LBE7:
 911              	.LBE8:
 186:Src/rf69.c    ****       if ((dest & 0xC0) == parity) {
 912              		.loc 1 186 7 is_stmt 1 view .LVU206
 186:Src/rf69.c    ****       if ((dest & 0xC0) == parity) {
 913              		.loc 1 186 15 is_stmt 0 view .LVU207
 914 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 915              	.LVL91:
 187:Src/rf69.c    ****         uint8_t destId = dest & 0x3F;
 916              		.loc 1 187 7 is_stmt 1 view .LVU208
 187:Src/rf69.c    ****         uint8_t destId = dest & 0x3F;
 917              		.loc 1 187 25 is_stmt 0 view .LVU209
 918 0098 114A     		ldr	r2, .L65+20
 919 009a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 187:Src/rf69.c    ****         uint8_t destId = dest & 0x3F;
 920              		.loc 1 187 10 view .LVU210
 921 009c 03F0C002 		and	r2, r3, #192
 922 00a0 9142     		cmp	r1, r2
 923 00a2 0DD1     		bne	.L59
 924              	.LBB9:
 188:Src/rf69.c    ****         if (destId == myId || destId == 0 || myId == 63) {
 925              		.loc 1 188 9 is_stmt 1 view .LVU211
 188:Src/rf69.c    ****         if (destId == myId || destId == 0 || myId == 63) {
 926              		.loc 1 188 17 is_stmt 0 view .LVU212
 927 00a4 03F03F03 		and	r3, r3, #63
 928              	.LVL92:
 189:Src/rf69.c    ****           return count;
 929              		.loc 1 189 9 is_stmt 1 view .LVU213
 189:Src/rf69.c    ****           return count;
 930              		.loc 1 189 20 is_stmt 0 view .LVU214
 931 00a8 0E4A     		ldr	r2, .L65+24
 932 00aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 189:Src/rf69.c    ****           return count;
 933              		.loc 1 189 12 view .LVU215
 934 00ac 9A42     		cmp	r2, r3
 935 00ae 02D0     		beq	.L57
 189:Src/rf69.c    ****           return count;
ARM GAS  /tmp/ccRBXKVw.s 			page 21


 936              		.loc 1 189 28 discriminator 1 view .LVU216
 937 00b0 0BB1     		cbz	r3, .L57
 189:Src/rf69.c    ****           return count;
 938              		.loc 1 189 43 discriminator 2 view .LVU217
 939 00b2 3F2A     		cmp	r2, #63
 940 00b4 07D1     		bne	.L60
 941              	.L57:
 190:Src/rf69.c    ****         }
 942              		.loc 1 190 11 is_stmt 1 view .LVU218
 190:Src/rf69.c    ****         }
 943              		.loc 1 190 18 is_stmt 0 view .LVU219
 944 00b6 68B2     		sxtb	r0, r5
 945              	.LVL93:
 946              	.L52:
 190:Src/rf69.c    ****         }
 947              		.loc 1 190 18 view .LVU220
 948              	.LBE9:
 949              	.LBE10:
 950              	.LBE11:
 196:Src/rf69.c    **** }
 951              		.loc 1 196 1 view .LVU221
 952 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 953              	.LVL94:
 954              	.L58:
 195:Src/rf69.c    **** }
 955              		.loc 1 195 10 view .LVU222
 956 00ba 4FF0FF30 		mov	r0, #-1
 957 00be FBE7     		b	.L52
 958              	.LVL95:
 959              	.L59:
 195:Src/rf69.c    **** }
 960              		.loc 1 195 10 view .LVU223
 961 00c0 4FF0FF30 		mov	r0, #-1
 962 00c4 F8E7     		b	.L52
 963              	.LVL96:
 964              	.L60:
 195:Src/rf69.c    **** }
 965              		.loc 1 195 10 view .LVU224
 966 00c6 4FF0FF30 		mov	r0, #-1
 967 00ca F5E7     		b	.L52
 968              	.L66:
 969              		.align	2
 970              	.L65:
 971 00cc 00000000 		.word	mode
 972 00d0 00000000 		.word	.LANCHOR1
 973 00d4 00000000 		.word	rssi
 974 00d8 00000000 		.word	lna
 975 00dc 00000000 		.word	afc
 976 00e0 00000000 		.word	parity
 977 00e4 00000000 		.word	myId
 978              		.cfi_endproc
 979              	.LFE140:
 981              		.section	.text.RF69_send,"ax",%progbits
 982              		.align	1
 983              		.global	RF69_send
 984              		.syntax unified
 985              		.thumb
ARM GAS  /tmp/ccRBXKVw.s 			page 22


 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	RF69_send:
 990              	.LVL97:
 991              	.LFB141:
 197:Src/rf69.c    **** 
 198:Src/rf69.c    **** void RF69_send (uint8_t header, const void* ptr, int len) {
 992              		.loc 1 198 59 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              		.loc 1 198 59 is_stmt 0 view .LVU226
 997 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 998              	.LCFI14:
 999              		.cfi_def_cfa_offset 24
 1000              		.cfi_offset 3, -24
 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 0446     		mov	r4, r0
 1007 0004 0E46     		mov	r6, r1
 1008 0006 1546     		mov	r5, r2
 199:Src/rf69.c    ****   RF69_setMode(MODE_SLEEP);
 1009              		.loc 1 199 3 is_stmt 1 view .LVU227
 1010 0008 0020     		movs	r0, #0
 1011              	.LVL98:
 1012              		.loc 1 199 3 is_stmt 0 view .LVU228
 1013 000a FFF7FEFF 		bl	RF69_setMode
 1014              	.LVL99:
 200:Src/rf69.c    **** 
 201:Src/rf69.c    **** #if RF69_SPI_BULK
 202:Src/rf69.c    ****   RF69_select();
 203:Src/rf69.c    ****   SPI_transfer8_RFM(REG_FIFO | 0x80);
 204:Src/rf69.c    ****   SPI_transfer8_RFM(len + 2);
 205:Src/rf69.c    ****   SPI_transfer8_RFM((header & 0x3F) | parity);
 206:Src/rf69.c    ****   SPI_transfer8_RFM((header & 0xC0) | myId);
 207:Src/rf69.c    ****   for (int i = 0; i < len; ++i)
 208:Src/rf69.c    ****     SPI_transfer8_RFM(((const uint8_t*) ptr)[i]);
 209:Src/rf69.c    ****   RF69_unselect();
 210:Src/rf69.c    **** #else
 211:Src/rf69.c    ****   writeReg(REG_FIFO, len + 2);
 1015              		.loc 1 211 3 is_stmt 1 view .LVU229
 1016 000e A91C     		adds	r1, r5, #2
 1017 0010 C9B2     		uxtb	r1, r1
 1018 0012 0020     		movs	r0, #0
 1019 0014 FFF7FEFF 		bl	writeReg
 1020              	.LVL100:
 212:Src/rf69.c    ****   writeReg(REG_FIFO, (header & 0x3F) | parity);
 1021              		.loc 1 212 3 view .LVU230
 1022              		.loc 1 212 30 is_stmt 0 view .LVU231
 1023 0018 67B2     		sxtb	r7, r4
 1024 001a 04F03F04 		and	r4, r4, #63
 1025              		.loc 1 212 38 view .LVU232
 1026 001e 124B     		ldr	r3, .L73
 1027 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccRBXKVw.s 			page 23


 1028              		.loc 1 212 3 view .LVU233
 1029 0022 2143     		orrs	r1, r1, r4
 1030 0024 0020     		movs	r0, #0
 1031 0026 FFF7FEFF 		bl	writeReg
 1032              	.LVL101:
 213:Src/rf69.c    ****   writeReg(REG_FIFO, (header & 0xC0) | myId);
 1033              		.loc 1 213 3 is_stmt 1 view .LVU234
 1034              		.loc 1 213 30 is_stmt 0 view .LVU235
 1035 002a 27F03F07 		bic	r7, r7, #63
 1036              		.loc 1 213 38 view .LVU236
 1037 002e 0F4B     		ldr	r3, .L73+4
 1038 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1039 0032 3943     		orrs	r1, r1, r7
 1040              		.loc 1 213 3 view .LVU237
 1041 0034 C9B2     		uxtb	r1, r1
 1042 0036 0020     		movs	r0, #0
 1043 0038 FFF7FEFF 		bl	writeReg
 1044              	.LVL102:
 214:Src/rf69.c    ****   for (int i = 0; i < len; ++i)
 1045              		.loc 1 214 3 is_stmt 1 view .LVU238
 1046              	.LBB12:
 1047              		.loc 1 214 8 view .LVU239
 1048              		.loc 1 214 12 is_stmt 0 view .LVU240
 1049 003c 0024     		movs	r4, #0
 1050              	.LVL103:
 1051              	.L68:
 1052              		.loc 1 214 19 is_stmt 1 discriminator 1 view .LVU241
 1053              		.loc 1 214 3 is_stmt 0 discriminator 1 view .LVU242
 1054 003e AC42     		cmp	r4, r5
 1055 0040 05DA     		bge	.L72
 215:Src/rf69.c    ****     writeReg(REG_FIFO, ((const uint8_t*) ptr)[i]);
 1056              		.loc 1 215 5 is_stmt 1 discriminator 3 view .LVU243
 1057 0042 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 1058 0044 0020     		movs	r0, #0
 1059 0046 FFF7FEFF 		bl	writeReg
 1060              	.LVL104:
 214:Src/rf69.c    ****   for (int i = 0; i < len; ++i)
 1061              		.loc 1 214 28 discriminator 3 view .LVU244
 1062 004a 0134     		adds	r4, r4, #1
 1063              	.LVL105:
 214:Src/rf69.c    ****   for (int i = 0; i < len; ++i)
 1064              		.loc 1 214 28 is_stmt 0 discriminator 3 view .LVU245
 1065 004c F7E7     		b	.L68
 1066              	.L72:
 214:Src/rf69.c    ****   for (int i = 0; i < len; ++i)
 1067              		.loc 1 214 28 discriminator 3 view .LVU246
 1068              	.LBE12:
 216:Src/rf69.c    **** #endif
 217:Src/rf69.c    **** 
 218:Src/rf69.c    ****   RF69_setMode(MODE_TRANSMIT);
 1069              		.loc 1 218 3 is_stmt 1 view .LVU247
 1070 004e 0C20     		movs	r0, #12
 1071 0050 FFF7FEFF 		bl	RF69_setMode
 1072              	.LVL106:
 219:Src/rf69.c    ****   while ((readReg(REG_IRQFLAGS2) & IRQ2_PACKETSENT) == 0)
 1073              		.loc 1 219 3 view .LVU248
 1074              	.L70:
ARM GAS  /tmp/ccRBXKVw.s 			page 24


 1075              		.loc 1 219 9 view .LVU249
 1076              		.loc 1 219 11 is_stmt 0 view .LVU250
 1077 0054 2820     		movs	r0, #40
 1078 0056 FFF7FEFF 		bl	readReg
 1079              	.LVL107:
 1080              		.loc 1 219 9 view .LVU251
 1081 005a 10F0080F 		tst	r0, #8
 1082 005e F9D0     		beq	.L70
 220:Src/rf69.c    ****     chThdYield();
 221:Src/rf69.c    **** 
 222:Src/rf69.c    ****   RF69_setMode(MODE_STANDBY);
 1083              		.loc 1 222 3 is_stmt 1 view .LVU252
 1084 0060 0420     		movs	r0, #4
 1085 0062 FFF7FEFF 		bl	RF69_setMode
 1086              	.LVL108:
 223:Src/rf69.c    **** }
 1087              		.loc 1 223 1 is_stmt 0 view .LVU253
 1088 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1089              	.LVL109:
 1090              	.L74:
 1091              		.loc 1 223 1 view .LVU254
 1092              		.align	2
 1093              	.L73:
 1094 0068 00000000 		.word	parity
 1095 006c 00000000 		.word	myId
 1096              		.cfi_endproc
 1097              	.LFE141:
 1099              		.comm	rssi,1,1
 1100              		.comm	afc,1,1
 1101              		.comm	lna,1,1
 1102              		.comm	parity,1,1
 1103              		.comm	myId,1,1
 1104              		.comm	mode,1,1
 1105              		.section	.bss.lastFlag.8550,"aw",%nobits
 1106              		.set	.LANCHOR1,. + 0
 1109              	lastFlag.8550:
 1110 0000 00       		.space	1
 1111              		.section	.rodata.configRegs,"a"
 1112              		.align	2
 1113              		.set	.LANCHOR0,. + 0
 1116              	configRegs:
 1117 0000 02000302 		.ascii	"\002\000\003\002\004\212\005\002\006\341\013 \021\231"
 1117      048A0502 
 1117      06E10B20 
 1117      1199
 1118 000e 194A1A42 		.ascii	"\031J\032B\036\014&\007)\240-\005.\210/-7\3208B<\217"
 1118      1E0C2607 
 1118      29A02D05 
 1118      2E882F2D 
 1118      37D03842 
 1119 0024 3D126F20 		.ascii	"=\022o q\002\000"
 1119      710200
 1120              		.text
 1121              	.Letext0:
 1122              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1123              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1124              		.file 4 "/usr/include/newlib/sys/_types.h"
ARM GAS  /tmp/ccRBXKVw.s 			page 25


 1125              		.file 5 "/usr/include/newlib/sys/reent.h"
 1126              		.file 6 "/usr/include/newlib/sys/lock.h"
 1127              		.file 7 "Inc/rf69.h"
 1128              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1129              		.file 9 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1130              		.file 10 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1131              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1132              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1133              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1134              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1135              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1136              		.file 16 "Inc/spi.h"
 1137              		.file 17 "Inc/usart.h"
 1138              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
ARM GAS  /tmp/ccRBXKVw.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 rf69.c
     /tmp/ccRBXKVw.s:18     .text.RFM69_SetCSPin:0000000000000000 $t
     /tmp/ccRBXKVw.s:26     .text.RFM69_SetCSPin:0000000000000000 RFM69_SetCSPin
     /tmp/ccRBXKVw.s:53     .text.RFM69_SetCSPin:0000000000000010 $d
     /tmp/ccRBXKVw.s:58     .text.RF69_select:0000000000000000 $t
     /tmp/ccRBXKVw.s:65     .text.RF69_select:0000000000000000 RF69_select
     /tmp/ccRBXKVw.s:86     .text.RF69_unselect:0000000000000000 $t
     /tmp/ccRBXKVw.s:93     .text.RF69_unselect:0000000000000000 RF69_unselect
     /tmp/ccRBXKVw.s:114    .text.spi_rwReg:0000000000000000 $t
     /tmp/ccRBXKVw.s:121    .text.spi_rwReg:0000000000000000 spi_rwReg
     /tmp/ccRBXKVw.s:164    .text.readReg:0000000000000000 $t
     /tmp/ccRBXKVw.s:171    .text.readReg:0000000000000000 readReg
     /tmp/ccRBXKVw.s:211    .text.writeReg:0000000000000000 $t
     /tmp/ccRBXKVw.s:218    .text.writeReg:0000000000000000 writeReg
     /tmp/ccRBXKVw.s:255    .text.chThdYield:0000000000000000 $t
     /tmp/ccRBXKVw.s:262    .text.chThdYield:0000000000000000 chThdYield
     /tmp/ccRBXKVw.s:275    .text.RF69_setMode:0000000000000000 $t
     /tmp/ccRBXKVw.s:282    .text.RF69_setMode:0000000000000000 RF69_setMode
     /tmp/ccRBXKVw.s:334    .text.RF69_setMode:000000000000002c $d
                            *COM*:0000000000000001 mode
     /tmp/ccRBXKVw.s:339    .text.RF69_setFrequency:0000000000000000 $t
     /tmp/ccRBXKVw.s:346    .text.RF69_setFrequency:0000000000000000 RF69_setFrequency
     /tmp/ccRBXKVw.s:410    .text.RF69_setFrequency:000000000000003c $d
     /tmp/ccRBXKVw.s:416    .text.RF69_configure:0000000000000000 $t
     /tmp/ccRBXKVw.s:423    .text.RF69_configure:0000000000000000 RF69_configure
     /tmp/ccRBXKVw.s:470    .text.RF69_init:0000000000000000 $t
     /tmp/ccRBXKVw.s:477    .text.RF69_init:0000000000000000 RF69_init
     /tmp/ccRBXKVw.s:576    .text.RF69_init:0000000000000068 $d
                            *COM*:0000000000000001 myId
                            *COM*:0000000000000001 parity
     /tmp/ccRBXKVw.s:583    .text.RF69_encrypt:0000000000000000 $t
     /tmp/ccRBXKVw.s:590    .text.RF69_encrypt:0000000000000000 RF69_encrypt
     /tmp/ccRBXKVw.s:670    .text.RF69_txPower:0000000000000000 $t
     /tmp/ccRBXKVw.s:677    .text.RF69_txPower:0000000000000000 RF69_txPower
     /tmp/ccRBXKVw.s:714    .text.RF69_sleep:0000000000000000 $t
     /tmp/ccRBXKVw.s:721    .text.RF69_sleep:0000000000000000 RF69_sleep
     /tmp/ccRBXKVw.s:742    .text.RF69_receive:0000000000000000 $t
     /tmp/ccRBXKVw.s:749    .text.RF69_receive:0000000000000000 RF69_receive
     /tmp/ccRBXKVw.s:971    .text.RF69_receive:00000000000000cc $d
                            *COM*:0000000000000001 rssi
                            *COM*:0000000000000001 lna
                            *COM*:0000000000000001 afc
     /tmp/ccRBXKVw.s:982    .text.RF69_send:0000000000000000 $t
     /tmp/ccRBXKVw.s:989    .text.RF69_send:0000000000000000 RF69_send
     /tmp/ccRBXKVw.s:1094   .text.RF69_send:0000000000000068 $d
     /tmp/ccRBXKVw.s:1109   .bss.lastFlag.8550:0000000000000000 lastFlag.8550
     /tmp/ccRBXKVw.s:1110   .bss.lastFlag.8550:0000000000000000 $d
     /tmp/ccRBXKVw.s:1112   .rodata.configRegs:0000000000000000 $d
     /tmp/ccRBXKVw.s:1116   .rodata.configRegs:0000000000000000 configRegs

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
SPI_transfer8_RFM
